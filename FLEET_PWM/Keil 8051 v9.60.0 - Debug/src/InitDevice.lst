C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Lawrenc
                    -e\SimplicityStudio\v5_workspace\EFM8BB3_I2C_Slave_FIFO\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Lawrence\SimplicityStudio\v5_works
                    -pace\EFM8BB3_I2C_Slave_FIFO\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;
                    -C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGE
                    -WIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_0_enter_DefaultMode_from_RESET ();
  30   1        PORTS_1_enter_DefaultMode_from_RESET ();
  31   1        PORTS_2_enter_DefaultMode_from_RESET ();
  32   1        PORTS_3_enter_DefaultMode_from_RESET ();
  33   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  34   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  35   1        TIMER16_4_enter_DefaultMode_from_RESET ();
  36   1        PCA_0_enter_DefaultMode_from_RESET ();
  37   1        PCACH_0_enter_DefaultMode_from_RESET ();
  38   1        PCACH_1_enter_DefaultMode_from_RESET ();
  39   1        PCACH_2_enter_DefaultMode_from_RESET ();
  40   1        I2CSLAVE_0_enter_DefaultMode_from_RESET ();
  41   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  42   1        // Restore the SFRPAGE
  43   1        SFRPAGE = SFRPAGE_save;
  44   1        // [Config Calls]$
  45   1      
  46   1      }
  47          
  48          //================================================================================
  49          // WDT_0_enter_DefaultMode_from_RESET
  50          //================================================================================
  51          extern void
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 2   

  52          WDT_0_enter_DefaultMode_from_RESET (void)
  53          {
  54   1        // $[Watchdog Timer Init Variable Declarations]
  55   1        uint32_t i;
  56   1        bool ea;
  57   1        // [Watchdog Timer Init Variable Declarations]$
  58   1      
  59   1        // $[WDTCN - Watchdog Timer Control]
  60   1        // Deprecated
  61   1        // [WDTCN - Watchdog Timer Control]$
  62   1      
  63   1        // $[WDTCN_2 - Watchdog Timer Control]
  64   1        SFRPAGE = 0x00;
  65   1      
  66   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  67   1        WDTCN = 0xA5;
  68   1      
  69   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  70   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  71   1          {
  72   2            NOP ();
  73   2          }
  74   1      
  75   1        // Disable WDT
  76   1        ea = IE_EA;
  77   1        IE_EA = 0;
  78   1        WDTCN = 0xDE;
  79   1        WDTCN = 0xAD;
  80   1        IE_EA = ea;
  81   1      
  82   1        // [WDTCN_2 - Watchdog Timer Control]$
  83   1      
  84   1      }
  85          
  86          //================================================================================
  87          // PORTS_1_enter_DefaultMode_from_RESET
  88          //================================================================================
  89          extern void
  90          PORTS_1_enter_DefaultMode_from_RESET (void)
  91          {
  92   1        // $[P1 - Port 1 Pin Latch]
  93   1        // [P1 - Port 1 Pin Latch]$
  94   1      
  95   1        // $[P1MDOUT - Port 1 Output Mode]
  96   1        /***********************************************************************
  97   1         - P1.0 output is open-drain
  98   1         - P1.1 output is push-pull
  99   1         - P1.2 output is push-pull
 100   1         - P1.3 output is push-pull
 101   1         - P1.4 output is push-pull
 102   1         - P1.5 output is push-pull
 103   1         - P1.6 output is open-drain
 104   1         - P1.7 output is open-drain
 105   1         ***********************************************************************/
 106   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__PUSH_PULL
 107   1            | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__PUSH_PULL | P1MDOUT_B4__PUSH_PULL
 108   1            | P1MDOUT_B5__PUSH_PULL | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 109   1        // [P1MDOUT - Port 1 Output Mode]$
 110   1      
 111   1        // $[P1MDIN - Port 1 Input Mode]
 112   1        // [P1MDIN - Port 1 Input Mode]$
 113   1      
 114   1        // $[P1SKIP - Port 1 Skip]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 3   

 115   1        /***********************************************************************
 116   1         - P1.0 pin is skipped by the crossbar
 117   1         - P1.1 pin is not skipped by the crossbar
 118   1         - P1.2 pin is not skipped by the crossbar
 119   1         - P1.3 pin is not skipped by the crossbar
 120   1         - P1.4 pin is not skipped by the crossbar
 121   1         - P1.5 pin is not skipped by the crossbar
 122   1         - P1.6 pin is skipped by the crossbar
 123   1         - P1.7 pin is not skipped by the crossbar
 124   1         ***********************************************************************/
 125   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__NOT_SKIPPED | P1SKIP_B2__NOT_SKIPPED
 126   1            | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 127   1            | P1SKIP_B6__SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 128   1        // [P1SKIP - Port 1 Skip]$
 129   1      
 130   1        // $[P1MASK - Port 1 Mask]
 131   1        // [P1MASK - Port 1 Mask]$
 132   1      
 133   1        // $[P1MAT - Port 1 Match]
 134   1        // [P1MAT - Port 1 Match]$
 135   1      
 136   1      }
 137          
 138          //================================================================================
 139          // PORTS_2_enter_DefaultMode_from_RESET
 140          //================================================================================
 141          extern void
 142          PORTS_2_enter_DefaultMode_from_RESET (void)
 143          {
 144   1        // $[P2 - Port 2 Pin Latch]
 145   1        // [P2 - Port 2 Pin Latch]$
 146   1      
 147   1        // $[P2MDOUT - Port 2 Output Mode]
 148   1        // [P2MDOUT - Port 2 Output Mode]$
 149   1      
 150   1        // $[P2MDIN - Port 2 Input Mode]
 151   1        // [P2MDIN - Port 2 Input Mode]$
 152   1      
 153   1        // $[P2SKIP - Port 2 Skip]
 154   1        /***********************************************************************
 155   1         - P2.0 pin is skipped by the crossbar
 156   1         - P2.1 pin is skipped by the crossbar
 157   1         - P2.2 pin is not skipped by the crossbar
 158   1         - P2.3 pin is not skipped by the crossbar
 159   1         ***********************************************************************/
 160   1        SFRPAGE = 0x20;
 161   1        P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__SKIPPED | P2SKIP_B2__NOT_SKIPPED
 162   1            | P2SKIP_B3__NOT_SKIPPED;
 163   1        // [P2SKIP - Port 2 Skip]$
 164   1      
 165   1        // $[P2MASK - Port 2 Mask]
 166   1        // [P2MASK - Port 2 Mask]$
 167   1      
 168   1        // $[P2MAT - Port 2 Match]
 169   1        // [P2MAT - Port 2 Match]$
 170   1      
 171   1      }
 172          
 173          //================================================================================
 174          // PBCFG_0_enter_DefaultMode_from_RESET
 175          //================================================================================
 176          extern void
 177          PBCFG_0_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 4   

 178          {
 179   1        // $[XBR2 - Port I/O Crossbar 2]
 180   1        /***********************************************************************
 181   1         - Weak Pullups enabled 
 182   1         - Crossbar enabled
 183   1         - UART1 I/O unavailable at Port pin
 184   1         - UART1 RTS1 unavailable at Port pin
 185   1         - UART1 CTS1 unavailable at Port pin
 186   1         ***********************************************************************/
 187   1        SFRPAGE = 0x00;
 188   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 189   1            | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 190   1            | XBR2_URT1CTSE__DISABLED;
 191   1        // [XBR2 - Port I/O Crossbar 2]$
 192   1      
 193   1        // $[PRTDRV - Port Drive Strength]
 194   1        // [PRTDRV - Port Drive Strength]$
 195   1      
 196   1        // $[XBR0 - Port I/O Crossbar 0]
 197   1        // [XBR0 - Port I/O Crossbar 0]$
 198   1      
 199   1        // $[XBR1 - Port I/O Crossbar 1]
 200   1        /***********************************************************************
 201   1         - CEX0, CEX1, CEX2 routed to Port pins
 202   1         - ECI unavailable at Port pin
 203   1         - T0 unavailable at Port pin
 204   1         - T1 unavailable at Port pin
 205   1         - T2 unavailable at Port pin
 206   1         ***********************************************************************/
 207   1        XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 208   1            | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 209   1        // [XBR1 - Port I/O Crossbar 1]$
 210   1      
 211   1      }
 212          
 213          //================================================================================
 214          // CLOCK_0_enter_DefaultMode_from_RESET
 215          //================================================================================
 216          extern void
 217          CLOCK_0_enter_DefaultMode_from_RESET (void)
 218          {
 219   1        // $[HFOSC1 Setup]
 220   1        // [HFOSC1 Setup]$
 221   1      
 222   1        // $[CLKSEL - Clock Select]
 223   1        /***********************************************************************
 224   1         - Clock derived from the Internal High Frequency Oscillator 0
 225   1         - SYSCLK is equal to selected clock source divided by 1
 226   1         ***********************************************************************/
 227   1        CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 228   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 229   1          ;
 230   1        // [CLKSEL - Clock Select]$
 231   1      
 232   1      }
 233          
 234          //================================================================================
 235          // TIMER16_4_enter_DefaultMode_from_RESET
 236          //================================================================================
 237          extern void
 238          TIMER16_4_enter_DefaultMode_from_RESET (void)
 239          {
 240   1        // $[Timer Initialization]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 5   

 241   1        // Save Timer Configuration
 242   1        uint8_t TMR4CN0_TR4_save;
 243   1        SFRPAGE = 0x10;
 244   1        TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 245   1        // Stop Timer
 246   1        TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 247   1        // [Timer Initialization]$
 248   1      
 249   1        // $[TMR4CN1 - Timer 4 Control 1]
 250   1        // [TMR4CN1 - Timer 4 Control 1]$
 251   1      
 252   1        // $[TMR4CN0 - Timer 4 Control]
 253   1        // [TMR4CN0 - Timer 4 Control]$
 254   1      
 255   1        // $[TMR4H - Timer 4 High Byte]
 256   1        // [TMR4H - Timer 4 High Byte]$
 257   1      
 258   1        // $[TMR4L - Timer 4 Low Byte]
 259   1        // [TMR4L - Timer 4 Low Byte]$
 260   1      
 261   1        // $[TMR4RLH - Timer 4 Reload High Byte]
 262   1        /***********************************************************************
 263   1         - Timer 4 Reload High Byte = 0x38
 264   1         ***********************************************************************/
 265   1        TMR4RLH = (0x38 << TMR4RLH_TMR4RLH__SHIFT);
 266   1        // [TMR4RLH - Timer 4 Reload High Byte]$
 267   1      
 268   1        // $[TMR4RLL - Timer 4 Reload Low Byte]
 269   1        /***********************************************************************
 270   1         - Timer 4 Reload Low Byte = 0x9E
 271   1         ***********************************************************************/
 272   1        TMR4RLL = (0x9E << TMR4RLL_TMR4RLL__SHIFT);
 273   1        // [TMR4RLL - Timer 4 Reload Low Byte]$
 274   1      
 275   1        // $[TMR4CN0]
 276   1        /***********************************************************************
 277   1         - Start Timer 4 running
 278   1         ***********************************************************************/
 279   1        TMR4CN0 |= TMR4CN0_TR4__RUN;
 280   1        // [TMR4CN0]$
 281   1      
 282   1        // $[Timer Restoration]
 283   1        // Restore Timer Configuration
 284   1        TMR4CN0 |= TMR4CN0_TR4_save;
 285   1        // [Timer Restoration]$
 286   1      
 287   1      }
 288          
 289          //================================================================================
 290          // I2CSLAVE_0_enter_DefaultMode_from_RESET
 291          //================================================================================
 292          extern void
 293          I2CSLAVE_0_enter_DefaultMode_from_RESET (void)
 294          {
 295   1        // $[I2C0FCN0 - I2C0 FIFO Control 0]
 296   1        // [I2C0FCN0 - I2C0 FIFO Control 0]$
 297   1        SFRPAGE = 0x20;
 298   1        I2C0FCN0 &= ~I2C0FCN0_RXTH__FMASK;
 299   1        I2C0FCN0 |= I2C0FCN0_RXTH__ZERO | I2C0FCN0_RFRQE__ENABLED;
 300   1        I2C0FCN0 &= ~I2C0FCN0_TXTH__FMASK;
 301   1        I2C0FCN0 |= I2C0FCN0_TXTH__ONE | I2C0FCN0_TFRQE__ENABLED;
 302   1      
 303   1        // $[I2C0SLAD - I2C0 Slave Address]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 6   

 304   1        /***********************************************************************
 305   1         - I2C Hardware Slave Address = 0x78
 306   1         ***********************************************************************/
 307   1        SFRPAGE = 0x20;
 308   1        I2C0SLAD = (0x78 << I2C0SLAD_I2C0SLAD__SHIFT);
 309   1        // [I2C0SLAD - I2C0 Slave Address]$
 310   1      
 311   1        // $[I2C0CN0 - I2C0 Control]
 312   1        /***********************************************************************
 313   1         - Set the I2C0 Slave pins in I2C mode
 314   1         - Data bytes must be written into the TX FIFO via the I2C0DOUT register
 315   1         before the 8th SCL clock of the matching slave address byte transfer
 316   1         arrives for an I2C read operation
 317   1         - Enable I2C SCL low timeout detection using Timer 4 if Timer 4 RLFSEL
 318   1         is set appropriately
 319   1         ***********************************************************************/
 320   1        I2C0CN0 &= ~I2C0CN0_PRELOAD__BMASK;
 321   1        I2C0CN0 |= I2C0CN0_PINMD__I2C_MODE | I2C0CN0_TIMEOUT__ENABLED;
 322   1        // [I2C0CN0 - I2C0 Control]$
 323   1      
 324   1        //I2C0FCN0 |= I2C0FCN0_RFRQE__ENABLED;  // Enable RX FIFO request (threshold request) interrupt
 325   1      
 326   1        // $[I2C0ADM - I2C0 Slave Address Mask]
 327   1        // [I2C0ADM - I2C0 Slave Address Mask]$
 328   1        I2C0ADM &= ~I2C0ADM_FACS__BMASK;
 329   1      
 330   1        // $[I2C0CN0 - I2C0 Control 2]
 331   1        /***********************************************************************
 332   1         - Enable the I2C0 Slave module
 333   1         ***********************************************************************/
 334   1        I2C0CN0 |= I2C0CN0_I2C0EN__ENABLED;
 335   1        // [I2C0CN0 - I2C0 Control 2]$
 336   1      
 337   1      }
 338          
 339          //================================================================================
 340          // INTERRUPT_0_enter_DefaultMode_from_RESET
 341          //================================================================================
 342          extern void
 343          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 344          {
 345   1        // $[EIE1 - Extended Interrupt Enable 1]
 346   1        // [EIE1 - Extended Interrupt Enable 1]$
 347   1      
 348   1        // $[EIE2 - Extended Interrupt Enable 2]
 349   1        /***********************************************************************
 350   1         - Disable CL0 interrupts
 351   1         - Enable interrupt requests generated by the I2C0 slave
 352   1         - Enable interrupt requests generated by the TF4L or TF4H flags
 353   1         - Disable Timer 5 interrupts
 354   1         - Disable UART1 interrupts
 355   1         ***********************************************************************/
 356   1        SFRPAGE = 0x00;
 357   1        EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__ENABLED | EIE2_ET4__ENABLED
 358   1            | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 359   1        // [EIE2 - Extended Interrupt Enable 2]$
 360   1      
 361   1        // $[EIP1H - Extended Interrupt Priority 1 High]
 362   1        // [EIP1H - Extended Interrupt Priority 1 High]$
 363   1      
 364   1        // $[EIP1 - Extended Interrupt Priority 1 Low]
 365   1        // [EIP1 - Extended Interrupt Priority 1 Low]$
 366   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 7   

 367   1        // $[EIP2 - Extended Interrupt Priority 2]
 368   1        // [EIP2 - Extended Interrupt Priority 2]$
 369   1      
 370   1        // $[EIP2H - Extended Interrupt Priority 2 High]
 371   1        // [EIP2H - Extended Interrupt Priority 2 High]$
 372   1      
 373   1        // $[IE - Interrupt Enable]
 374   1        /***********************************************************************
 375   1         - Enable each interrupt according to its individual mask setting
 376   1         - Disable external interrupt 0
 377   1         - Disable external interrupt 1
 378   1         - Disable all SPI0 interrupts
 379   1         - Disable all Timer 0 interrupt
 380   1         - Disable all Timer 1 interrupt
 381   1         - Disable Timer 2 interrupt
 382   1         - Disable UART0 interrupt
 383   1         ***********************************************************************/
 384   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 385   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 386   1            | IE_ES0__DISABLED;
 387   1        // [IE - Interrupt Enable]$
 388   1      
 389   1        // $[IP - Interrupt Priority]
 390   1        // [IP - Interrupt Priority]$
 391   1      
 392   1        // $[IPH - Interrupt Priority High]
 393   1        // [IPH - Interrupt Priority High]$
 394   1      
 395   1      }
 396          extern void
 397          PORTS_0_enter_DefaultMode_from_RESET (void)
 398          {
 399   1        // $[P0 - Port 0 Pin Latch]
 400   1        // [P0 - Port 0 Pin Latch]$
 401   1      
 402   1        // $[P0MDOUT - Port 0 Output Mode]
 403   1        // [P0MDOUT - Port 0 Output Mode]$
 404   1      
 405   1        // $[P0MDIN - Port 0 Input Mode]
 406   1        // [P0MDIN - Port 0 Input Mode]$
 407   1      
 408   1        // $[P0SKIP - Port 0 Skip]
 409   1        /***********************************************************************
 410   1         - P0.0 pin is skipped by the crossbar
 411   1         - P0.1 pin is skipped by the crossbar
 412   1         - P0.2 pin is skipped by the crossbar
 413   1         - P0.3 pin is skipped by the crossbar
 414   1         - P0.4 pin is skipped by the crossbar
 415   1         - P0.5 pin is skipped by the crossbar
 416   1         - P0.6 pin is skipped by the crossbar
 417   1         - P0.7 pin is skipped by the crossbar
 418   1         ***********************************************************************/
 419   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 420   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 421   1            | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 422   1        // [P0SKIP - Port 0 Skip]$
 423   1      
 424   1        // $[P0MASK - Port 0 Mask]
 425   1        // [P0MASK - Port 0 Mask]$
 426   1      
 427   1        // $[P0MAT - Port 0 Match]
 428   1        // [P0MAT - Port 0 Match]$
 429   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 8   

 430   1      }
 431          
 432          extern void
 433          PORTS_3_enter_DefaultMode_from_RESET (void)
 434          {
 435   1        // $[P3 - Port 3 Pin Latch]
 436   1        // [P3 - Port 3 Pin Latch]$
 437   1      
 438   1        // $[P3MDOUT - Port 3 Output Mode]
 439   1        /***********************************************************************
 440   1         - P3.0 output is open-drain
 441   1         - P3.1 output is open-drain
 442   1         - P3.2 output is open-drain
 443   1         - P3.3 output is open-drain
 444   1         - P3.4 output is push-pull
 445   1         - P3.7 output is open-drain
 446   1         ***********************************************************************/
 447   1        P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 448   1            | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN | P3MDOUT_B4__PUSH_PULL
 449   1            | P3MDOUT_B7__OPEN_DRAIN;
 450   1        // [P3MDOUT - Port 3 Output Mode]$
 451   1      
 452   1        // $[P3MDIN - Port 3 Input Mode]
 453   1        // [P3MDIN - Port 3 Input Mode]$
 454   1      
 455   1      }
 456          
 457          extern void
 458          PCA_0_enter_DefaultMode_from_RESET (void)
 459          {
 460   1        SFRPAGE = 0x00;
 461   1        // $[PCA Off]
 462   1        PCA0CN0_CR = PCA0CN0_CR__STOP;
 463   1        // [PCA Off]$
 464   1      
 465   1        // $[PCA0MD - PCA Mode]
 466   1        /***********************************************************************
 467   1         - PCA continues to function normally while the system controller is in
 468   1         Idle Mode
 469   1         - Disable the CF interrupt
 470   1         - System clock
 471   1         ***********************************************************************/
 472   1        PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 473   1            | PCA0MD_CPS__SYSCLK;
 474   1        // [PCA0MD - PCA Mode]$
 475   1      
 476   1        // $[PCA0CENT - PCA Center Alignment Enable]
 477   1        /***********************************************************************
 478   1         - Center-aligned
 479   1         - Center-aligned
 480   1         - Center-aligned
 481   1         - Edge-aligned
 482   1         - Edge-aligned
 483   1         - Edge-aligned
 484   1         ***********************************************************************/
 485   1        PCA0CENT = PCA0CENT_CEX0CEN__CENTER | PCA0CENT_CEX1CEN__CENTER
 486   1            | PCA0CENT_CEX2CEN__CENTER | PCA0CENT_CEX3CEN__EDGE
 487   1            | PCA0CENT_CEX4CEN__EDGE | PCA0CENT_CEX5CEN__EDGE;
 488   1        // [PCA0CENT - PCA Center Alignment Enable]$
 489   1      
 490   1        // $[PCA0CLR - PCA Comparator Clear Control]
 491   1        // [PCA0CLR - PCA Comparator Clear Control]$
 492   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 9   

 493   1        // $[PCA0L - PCA Counter/Timer Low Byte]
 494   1        // [PCA0L - PCA Counter/Timer Low Byte]$
 495   1      
 496   1        // $[PCA0H - PCA Counter/Timer High Byte]
 497   1        // [PCA0H - PCA Counter/Timer High Byte]$
 498   1      
 499   1        // $[PCA0POL - PCA Output Polarity]
 500   1        // [PCA0POL - PCA Output Polarity]$
 501   1      
 502   1        // $[PCA0PWM - PCA PWM Configuration]
 503   1        // [PCA0PWM - PCA PWM Configuration]$
 504   1      
 505   1        // $[PCA On]
 506   1        PCA0CN0_CR = PCA0CN0_CR__RUN;
 507   1        // [PCA On]$
 508   1      
 509   1      }
 510          
 511          extern void
 512          PCACH_0_enter_DefaultMode_from_RESET (void)
 513          {
 514   1        // $[PCA0 Settings Save]
 515   1        // Select Capture/Compare register)
 516   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 517   1        // [PCA0 Settings Save]$
 518   1      
 519   1        // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 520   1        /***********************************************************************
 521   1         - Disable negative edge capture
 522   1         - Disable CCF0 interrupts
 523   1         - Disable match function
 524   1         - 8 to 11-bit PWM selected
 525   1         - Disable positive edge capture
 526   1         - Enable comparator function
 527   1         - Enable PWM function
 528   1         - Disable toggle function
 529   1         ***********************************************************************/
 530   1        PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 531   1            | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT | PCA0CPM0_CAPP__DISABLED
 532   1            | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 533   1        // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 534   1      
 535   1        // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 536   1        /***********************************************************************
 537   1         - PCA Channel 0 Capture Module Low Byte = 0x40
 538   1         ***********************************************************************/
 539   1        PCA0CPL0 = (0x40 << PCA0CPL0_PCA0CPL0__SHIFT);
 540   1        // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 541   1      
 542   1        // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 543   1        /***********************************************************************
 544   1         - PCA Channel 0 Capture Module High Byte = 0x40
 545   1         ***********************************************************************/
 546   1        PCA0CPH0 = (0x40 << PCA0CPH0_PCA0CPH0__SHIFT);
 547   1        // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 548   1      
 549   1        // $[Auto-reload]
 550   1        // [Auto-reload]$
 551   1      
 552   1        // $[PCA0 Settings Restore]
 553   1        // [PCA0 Settings Restore]$
 554   1      
 555   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 10  

 556          
 557          extern void
 558          PCACH_1_enter_DefaultMode_from_RESET (void)
 559          {
 560   1        // $[PCA0 Settings Save]
 561   1        // Select Capture/Compare register)
 562   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 563   1        // [PCA0 Settings Save]$
 564   1      
 565   1        // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 566   1        /***********************************************************************
 567   1         - Disable negative edge capture
 568   1         - Disable CCF1 interrupts
 569   1         - Disable match function
 570   1         - 8 to 11-bit PWM selected
 571   1         - Disable positive edge capture
 572   1         - Enable comparator function
 573   1         - Enable PWM function
 574   1         - Disable toggle function
 575   1         ***********************************************************************/
 576   1        PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 577   1            | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT | PCA0CPM1_CAPP__DISABLED
 578   1            | PCA0CPM1_ECOM__ENABLED | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 579   1        // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 580   1      
 581   1        // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 582   1        /***********************************************************************
 583   1         - PCA Channel 1 Capture Module Low Byte = 0x40
 584   1         ***********************************************************************/
 585   1        PCA0CPL1 = (0x40 << PCA0CPL1_PCA0CPL1__SHIFT);
 586   1        // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 587   1      
 588   1        // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 589   1        /***********************************************************************
 590   1         - PCA Channel 1 Capture Module High Byte = 0x40
 591   1         ***********************************************************************/
 592   1        PCA0CPH1 = (0x40 << PCA0CPH1_PCA0CPH1__SHIFT);
 593   1        // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 594   1      
 595   1        // $[Auto-reload]
 596   1        // [Auto-reload]$
 597   1      
 598   1        // $[PCA0 Settings Restore]
 599   1        // [PCA0 Settings Restore]$
 600   1      
 601   1      }
 602          
 603          extern void
 604          PCACH_2_enter_DefaultMode_from_RESET (void)
 605          {
 606   1        // $[PCA0 Settings Save]
 607   1        // Select Capture/Compare register)
 608   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 609   1        // [PCA0 Settings Save]$
 610   1      
 611   1        // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 612   1        /***********************************************************************
 613   1         - Disable negative edge capture
 614   1         - Disable CCF2 interrupts
 615   1         - Disable match function
 616   1         - 8 to 11-bit PWM selected
 617   1         - Disable positive edge capture
 618   1         - Enable comparator function
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/15/2020 15:24:06 PAGE 11  

 619   1         - Enable PWM function
 620   1         - Disable toggle function
 621   1         ***********************************************************************/
 622   1        PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 623   1            | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__8_BIT | PCA0CPM2_CAPP__DISABLED
 624   1            | PCA0CPM2_ECOM__ENABLED | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 625   1        // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 626   1      
 627   1        // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 628   1        /***********************************************************************
 629   1         - PCA Channel 2 Capture Module Low Byte = 0x40
 630   1         ***********************************************************************/
 631   1        PCA0CPL2 = (0x40 << PCA0CPL2_PCA0CPL2__SHIFT);
 632   1        // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 633   1      
 634   1        // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 635   1        /***********************************************************************
 636   1         - PCA Channel 2 Capture Module High Byte = 0x40
 637   1         ***********************************************************************/
 638   1        PCA0CPH2 = (0x40 << PCA0CPH2_PCA0CPH2__SHIFT);
 639   1        // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 640   1      
 641   1        // $[Auto-reload]
 642   1        // [Auto-reload]$
 643   1      
 644   1        // $[PCA0 Settings Restore]
 645   1        // [PCA0 Settings Restore]$
 646   1      
 647   1      }
 648          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
